export DOTFILES=$HOME/.dotfiles
export ZSH=$DOTFILES/zsh

# display how long all tasks over 10 seconds take
export REPORTTIME=10

# The terminfo database contains the description of the terminal capabilities.
# Used by programs like 'vi' and 'curses' to control the screen. Usually kept at /usr/share/lib/terminfo
# Functionally equivalent to the individual entries in the 'termcap' file, but is compiled, not ASCII.
# Practically, this is used by persons who do a lot of remote access and want to preserve environments
[[ -e ~/.terminfo ]] && export TERMINFO_DIRS=~/.terminfo:/usr/share/terminfo

# define the code directory
# This is where my code exists and where I want the `c` autocomplete to work from exclusively
if [[ -d ~/code ]]; then
    export CODE_DIR=~/code
fi

# source all .zsh files inside of the zsh/ directory
for config ($ZSH/**/*.zsh) source $config

# if [[ -a ~/.localrc ]]; then
    # source ~/.localrc
# fi


# initialize autocomplete
# autoload -U compinit add-zsh-hook
# compinit

# hub adds bash-completion. Check bash install report
# for config ($ZSH/**/*completion.sh) source $config  # git_completion.sh sources a brewed git-complettion.bash

export EDITOR='nvim'

# Using new JAVA_HOME for pims.Bioformats
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home

# Adding java to path
export PATH=$JAVA_HOME/bin:$PATH

export PATH="/Users/cocamc/anaconda3/bin:$PATH"

# Make hombrew stuff available
export PATH=/usr/local/bin:$PATH

# add /usr/local/sbin, this sbin is for scripts that need superuser priveledges. We don't need that right now.
# if [[ -d /usr/local/sbin ]]; then
#    export PATH=/usr/local/sbin:$PATH
# fi

# adding path directory for custom scripts
export PATH=$DOTFILES/bin:$PATH

# check for custom bin directory and add to path
if [[ -d ~/bin ]]; then
    export PATH=~/bin:$PATH
fi

# This syntax is a 'if [ ] then' shorthand.
# The first evaluates if the string is null.
[ -z "$TMUX" ] && export TERM=xterm-256color-italic

# If rbenv installed. Initiate
if hash rbenv 2>/dev/null; then
    eval "$(rbenv init -)"
fi

# If Ruby Virtual Machine installed. Add appropriate paths
if [[ -d ~/.rvm ]]; then
    PATH=$HOME/.rvm/bin:$PATH # Add RVM to PATH for scripting
    source ~/.rvm/scripts/rvm
fi

# alias git to hub
if hash hub 2>/dev/null; then
    eval "$(hub alias -s)"
fi

# NODE STUFF

# source nvm
# export NVM_DIR=~/.nvm

# load-nvmrc() {
#    if [[ -f .nvmrc && -r .nvmrc ]]; then
#        nvm use
#    fi
#}

# add-zsh-hook chpwd load-nvmrc

# if hash brew 2>/dev/null; then
#    source $(brew --prefix nvm)/nvm.sh
#    source `brew --prefix`/etc/profile.d/z.sh
#    # when sourcing, check and ensure that the correct Node version is set
#    load-nvmrc
#
# export NVM_DIR="/Users/cocamc/.nvm"
# . "/usr/local/opt/nvm/nvm.sh"

# # Base16 Shell
# if [ -z "$THEME" ]; then
#     export THEME="base16-atelier-lakeside"
# fi
# if [ -z "$BACKGROUND" ]; then
#     export BACKGROUND="dark"
# fi

# BASE16_SHELL="$DOTFILES/.config/base16-shell/$THEME.$BACKGROUND.sh"
# [[ -s $BASE16_SHELL ]] && source $BASE16_SHELL
# source $BASE16_SHELL


# If you are using the fzf plugin
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh




# Run Postgres through zsh command line
export PATH="/Applications/Postgres.app/Contents/Versions/9.6/bin:$PATH"

# Amazon Web Services
export PATH="/Users/cocamc/anaconda3/bin:$PATH"

# AWS Credentials
export AWS_ACCESS_KEY_ID='AKIAJSORRKUNDCUE7M6Q'
export AWS_SECRET_ACCESS_KEY='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'

# Apache-Spark
export SPARK_HOME=`brew info apache-spark | grep /usr | tail -n 1 | cut -f 1 -d " "`/libexec
export PYTHONPATH=$SPARK_HOME/python:$PYTHONPATH

# Hadoop
export HADOOP_HOME=`brew info hadoop | grep /usr | head -n 1 | cut -f 1 -d " "`/libexec
export LD_LIBRARY_PATH=$HADOOP_HOME/lib/native/:$LD_LIBRARY_PATH

# Run Scripts folder
export PATH="/Users/cocamc/scripts:$PATH"

# capstone psycopg2/psql
export USER='postgres'
export HOST='52.53.72.68'
export PASSWORD='postgres'
export DBNAME='stack_overflow'

export DSN='sosql2'
# export UID='SA'
export PWD='Corinn3!'
export DATABASE='ms_stack_overflow'
